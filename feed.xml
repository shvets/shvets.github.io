<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2014-10-18T20:00:00-04:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Reading from external source in gherkin scripts</title>
    <link rel="alternate" href="/blog/2014/10/19/adding_source_to_gherkin_script.html"/>
    <id>/blog/2014/10/19/adding_source_to_gherkin_script.html</id>
    <published>2014-10-18T20:00:00-04:00</published>
    <updated>2014-10-18T20:00:00-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Reading from external source in gherkin (cucumber) scripts&lt;/h1&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Gherkin is simple English-like language for representing &lt;strong&gt;Given-When-Then&lt;/strong&gt; sequences to
support Behavior Driven Development (BDD). It is also a parser for the language itself.&lt;/p&gt;

&lt;p&gt;Based on this simple language you can build convenient tools that make communications
between Developers, Testers, Business Analysts, Product Owners and other stakeholders &lt;strong&gt;easy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;For example, these tools use gherkin as a language for representing behavior:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/cucumber/cucumber/tree/master"&gt;Cucumber&lt;/a&gt; is a tool for running automated tests written in plain language.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="http://robots.thoughtbot.com/turnip-a-tasty-cucumber-alternative"&gt;Turnip&lt;/a&gt; is a Gherkin extension for RSpec.
It allows you to write tests in Gherkin and run them through your RSpec environment so
you can write cucumber features in RSpec.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href="https://github.com/codegram/spinach"&gt;Spinach&lt;/a&gt; is a high-level BDD framework that leverages the expressive
Gherkin language to help you define executable specifications of your application or
library&amp;rsquo;s acceptance criteria.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Problem&lt;/h2&gt;

&lt;p&gt;Gherkin language lets you build simple Given-When-Then sequences and when you need
to repeat same set of sequences, you can use &lt;a href="https://github.com/cucumber/cucumber/wiki/Scenario-Outlines"&gt;Scenario Outline&lt;/a&gt;.
Unfortunately, Scenario Outline lets you use data defined only inside script only. It does
not have the ability to get data from external source like file or database connection.&lt;/p&gt;

&lt;h2&gt;Solution&lt;/h2&gt;

&lt;p&gt;Below is an example of Gherkin (Cucumber) feature script with Scenario Outline:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight gherkin"&gt;&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Using Wikipedia

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; within wikipedia.com context
    &lt;span class="nf"&gt;Given&lt;/span&gt; I am within wikipedia.com

  &lt;span class="nt"&gt;@selenium&lt;/span&gt;
  &lt;span class="kn"&gt;Scenario Outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Searching with selenium for a term with submit

    &lt;span class="nf"&gt;Given&lt;/span&gt; I am on wikipedia.com
    &lt;span class="nf"&gt;When&lt;/span&gt; I enter word &lt;span class="nv"&gt;&amp;lt;keyword&amp;gt;&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I click submit button
    &lt;span class="err"&gt;Then I should see keyword results&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;keyword&amp;gt;&lt;/span&gt;

    &lt;span class="nn"&gt;Examples&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;keyword&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Capybara&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Wombat&lt;/span&gt;   &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;Echidna&lt;/span&gt;  &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It reads from &lt;strong&gt;Examples&lt;/strong&gt; section and execute script 3 times for different &lt;strong&gt;&amp;lt;keyword&amp;gt;&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;We want to be able to externalize keywords, say in &lt;strong&gt;data.csv&lt;/strong&gt; file:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;Capybara
Wombat
Echidna
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and then replace section with data with the path to external file.&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight gherkin"&gt;&lt;span class="kd"&gt;Feature&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Using Wikipedia

  &lt;span class="kn"&gt;Background&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; within wikipedia.com context
    &lt;span class="nf"&gt;Given&lt;/span&gt; I am within wikipedia.com

  &lt;span class="nt"&gt;@selenium&lt;/span&gt;
  &lt;span class="kn"&gt;Scenario Outline&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; Searching with selenium for a term with submit

    &lt;span class="nf"&gt;Given&lt;/span&gt; I am on wikipedia.com
    &lt;span class="nf"&gt;When&lt;/span&gt; I enter word &lt;span class="nv"&gt;&amp;lt;keyword&amp;gt;&lt;/span&gt;
    &lt;span class="nf"&gt;And&lt;/span&gt; I click submit button
    &lt;span class="err"&gt;Then I should see keyword results&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;&amp;lt;keyword&amp;gt;&lt;/span&gt;

    &lt;span class="nn"&gt;Examples&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="nv"&gt;keyword&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
      &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="n"&gt;file:spec/features/data.csv&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It is possible to do with a little ruby metaprogramming and code is available &lt;a href="https://github.com/shvets/acceptance_test/blob/master/lib/acceptance_test/gherkin_ext.rb"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The idea is to locate the code where gherkin reads that data and replace it with your code
dynamically in memory.&lt;/p&gt;

&lt;p&gt;The code introduces hook on gherkin level, so it will work for all tools.&lt;/p&gt;

&lt;p&gt;Below it an example how to use it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'acceptance_test/gherkin_ext'&lt;/span&gt;

&lt;span class="n"&gt;data_reader&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;lambda&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;source_path&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt;
  &lt;span class="no"&gt;CSV&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;source_path&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="no"&gt;GherkinExt&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;enable_external_source&lt;/span&gt; &lt;span class="n"&gt;data_reader&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Configuring Macbook for Ruby/Rails Development with automated scripts</title>
    <link rel="alternate" href="/blog/2014/09/13/configuring_macbook_with_scripts.html"/>
    <id>/blog/2014/09/13/configuring_macbook_with_scripts.html</id>
    <published>2014-09-12T20:00:00-04:00</published>
    <updated>2014-09-12T20:00:00-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Configuring Macbook for Ruby/Rails Development with automated scripts&lt;/h1&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;When you plan to do web development, you need to do few steps, like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;installing installers (homebrew, rvm)&lt;/li&gt;
&lt;li&gt;installing support for various languages (ruby, java, nodejs, python, c, c++);&lt;/li&gt;
&lt;li&gt;installing databases (mysql, postgres, oracle etc);&lt;/li&gt;
&lt;li&gt;configuring databases (creating users, schemas, populating initial data);&lt;/li&gt;
&lt;li&gt;installing additional servers (apache, passenger, jenkins, selenium);&lt;/li&gt;
&lt;li&gt;starting/stopping services.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Usually all those steps are made manually. If it needs to be done only once, it&amp;rsquo;s OK.
But next time when you try to reproduce all steps on new computer or explain
new developer in the team, you can forget some details of it or forget completely
what needs to be done.&lt;/p&gt;

&lt;p&gt;As a common rule, it&amp;rsquo;s nice to have this information documented, or even better -
automated in form of scripts.&lt;/p&gt;

&lt;p&gt;There are numerous instructions around the Internet about how to configure your MacBook to work
with Ruby and Rails. I have my own &lt;a href="http://shvets.github.io/blog/2014/04/19/configure_macbook.html"&gt;blog entry&lt;/a&gt; on the same topic.
The problem with all of them is that they ought to be executed &lt;strong&gt;manually&lt;/strong&gt;. But we want to do
it &lt;strong&gt;automatically&lt;/strong&gt; with the help of scripts.&lt;/p&gt;

&lt;p&gt;When you try to solve this type of problem, you have &lt;strong&gt;&amp;ldquo;the chicken and the egg&amp;rdquo; problem&lt;/strong&gt; - in order to
do automatic provision, you have to have pre-installed languages/libraries. You don&amp;rsquo;t want
to do everything in form of &lt;strong&gt;low-level shell script&lt;/strong&gt;, but rather in &lt;strong&gt;high-level language&lt;/strong&gt;, like ruby,
python or node. Unfortunately such high-level scripts use external libraries that need to be downloaded
and installed first before you can run scripts.&lt;/p&gt;

&lt;p&gt;To make it simple and straightforward, we are going to do it &lt;strong&gt;remotely&lt;/strong&gt;, e.g. you have one computer
&lt;strong&gt;with pre-installed language and libraries&lt;/strong&gt; and we will install all required programs over &lt;strong&gt;ssh&lt;/strong&gt;
on clean computer. It means that &lt;strong&gt;you have to enable ssh access&lt;/strong&gt; on this computer. This idea is somewhat
similar to what &lt;a href="http://capistranorb.com"&gt;capistrano&lt;/a&gt; or &lt;a href="https://github.com/opscode/chef"&gt;chef&lt;/a&gt; does. Why don&amp;rsquo;t we use them here? Look at
this &lt;a href="http://shvets.github.io/blog/2013/12/21/script_executor.html"&gt;article&lt;/a&gt; for the explanation.&lt;/p&gt;

&lt;p&gt;I have built new ruby gem called &lt;a href="https://github.com/shvets/osx_provision"&gt;osx_provision&lt;/a&gt;, that provides automated scripts
for configuring Macbook. This article is about how to install, configure and use it with your project.
Look at my previous article if you need to understand how to do it manually.&lt;/p&gt;

&lt;h2&gt;Install&lt;/h2&gt;

&lt;p&gt;Add this line to your application&amp;rsquo;s Gemfile:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;gem &lt;span class="s1"&gt;'osx_provision'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then execute it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;bundle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or install it yourself as:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;gem install osx_provision
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Configure&lt;/h2&gt;

&lt;p&gt;Before you can start using &lt;strong&gt;osx_provision&lt;/strong&gt; gem within your project, you need to do the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Create configuration file (e.g. .osx_provision.json) in json format at the root of your project.
It will define your environment:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight json"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"domain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"127.0.0.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ENV['USER']"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ENV['HOME']"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"remote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="s2"&gt;"project"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{node.home}/work/my_project"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"ruby_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1.9.3"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"gemset"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"new_gem"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="s2"&gt;"postgres"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"hostname"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"localhost"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"postgres"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"postgres"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"app_user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"pg_user"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"app_password"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"pg_password"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"app_schemas"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"my_project_test"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"my_project_dev"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"my_project_prod"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Variables defined in this file are used by underlying shell scripts provided by this gem.
You can also add your own shell script (see details later) - in this case .osx_provision.json
will have your variables as well.&lt;/p&gt;

&lt;p&gt;Next &lt;strong&gt;node&lt;/strong&gt; section describes your destination computer where you want to install this provision.
In this example we do provisioning locally, but it&amp;rsquo;s possible to do it on remote machine, e.g.:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight json"&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"node"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"domain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"192.168.1.2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"some_remote_user"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"some_remote_password"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"22"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"remote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="err"&gt;...&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In &lt;strong&gt;project&lt;/strong&gt; section you keep project-related info, like project &lt;strong&gt;home&lt;/strong&gt;, project &lt;strong&gt;gemset name&lt;/strong&gt;
and &lt;strong&gt;ruby version&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;If you need to refer variable form another section, use &amp;ldquo;dot&amp;rdquo; notation, like &lt;strong&gt;#{node.home}&lt;/strong&gt;. It is
possible thanks to another gem called &lt;a href="https://github.com/shvets/text-interpolator"&gt;text-interpolator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Last &lt;strong&gt;postgres&lt;/strong&gt; section contains information about your postgres server and what database user and
schemas need to be created. In our example we describe that we want to create &lt;strong&gt;pg_user&lt;/strong&gt; with &lt;strong&gt;password&lt;/strong&gt;
and 3 schemas: &lt;strong&gt;my_project_test&lt;/strong&gt;, &lt;strong&gt;my_project_dev&lt;/strong&gt;, &lt;strong&gt;my_project_prod&lt;/strong&gt;. Postgres server
itself is located at &lt;strong&gt;localhost&lt;/strong&gt; address.&lt;/p&gt;

&lt;p&gt;You can also add &lt;strong&gt;mysql&lt;/strong&gt; section - it&amp;rsquo;s also supported.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Provide execution script&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Library itself if written in ruby, but for launching its code you have to use &lt;strong&gt;rake&lt;/strong&gt; or &lt;strong&gt;thor&lt;/strong&gt; tool.
Here I provide thor script as an example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# thor/osx_install.thor&lt;/span&gt;

&lt;span class="vg"&gt;$:&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s1"&gt;'/../lib'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'osx_provision'&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OsxInstall&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Thor&lt;/span&gt;
  &lt;span class="vi"&gt;@installer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OsxProvision&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;".osx_provision.json"&lt;/span&gt;

  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;
    &lt;span class="kp"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:installer&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"all"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Installs all required packages"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;all&lt;/span&gt;
    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:brew&lt;/span&gt; &lt;span class="c1"&gt;# execute command defined in shell script&lt;/span&gt;
    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:rvm&lt;/span&gt;
    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:qt&lt;/span&gt;

    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:init_launch_agent&lt;/span&gt;

    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:postgres&lt;/span&gt;
    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:postgres_restart&lt;/span&gt;

    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:jenkins&lt;/span&gt;
    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:jenkins_restart&lt;/span&gt;

    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:selenium&lt;/span&gt;

    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:ruby&lt;/span&gt;

    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:postgres_create_user&lt;/span&gt;
    &lt;span class="n"&gt;invoke&lt;/span&gt; &lt;span class="ss"&gt;:postgres_create_schemas&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"postgres_create_schemas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Initializes postgres schemas"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;postgres_create_schemas&lt;/span&gt;
    &lt;span class="c1"&gt;# execute method from  OsxProvision class - we need to read&lt;/span&gt;
    &lt;span class="c1"&gt;# schema names from configuration file and create them in the loop&lt;/span&gt;
    &lt;span class="no"&gt;OsxInstall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;installer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postgres_create_schemas&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"postgres_drop_schemas"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Drops postgres schemas"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;postgres_drop_schemas&lt;/span&gt;
    &lt;span class="no"&gt;OsxInstall&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;installer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;postgres_drop_schemas&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can execute separate commands from script directly with &lt;strong&gt;invoke&lt;/strong&gt; thor command. Below is fragment
of such script:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;prepare]

mkdir &lt;span class="c"&gt;#{home}/Library/LaunchAgents/&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;brew]

ruby -e &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

brew update
brew doctor

brew tap homebrew/dupes
brew tap homebrew/versions

&lt;span class="o"&gt;[&lt;/span&gt;rvm]

&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PATH&lt;/span&gt;:/usr/local/bin
&lt;span class="nv"&gt;USER_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#{node.home}"&lt;/span&gt;

curl -L https://get.rvm.io | bash

&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$USER_HOME&lt;/span&gt;/.rvm/scripts/rvm

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;All available scripts are located &lt;a href="https://github.com/shvets/osx_provision/blob/master/lib/osx_provision/osx_provision_scripts.sh"&gt;here&lt;/a&gt;. If you need more scripts, you can
create them locally (e.g. in (thor/osx_provision_scripts_my_project.sh)) and then initialize
thor script accordingly:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# thor/my_project_osx_provision_scripts.thor&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OsxInstall&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Thor&lt;/span&gt;
  &lt;span class="vi"&gt;@installer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OsxProvision&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;".osx_provision.json"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                 &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;expand_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"my_project_osx_provision_scripts.sh"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Below is the example of such script for running rails server in standard and debug mode:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;&lt;span class="c"&gt;#!/bin/sh&lt;/span&gt;

&lt;span class="c"&gt;##############################&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;rails]

&lt;span class="nv"&gt;USER_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#{node.home}"&lt;/span&gt;
&lt;span class="nv"&gt;APP_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#{project.home}"&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$APP_HOME&lt;/span&gt;

&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$USER_HOME&lt;/span&gt;/.rvm/scripts/rvm

rvm use &lt;span class="c"&gt;#{project.ruby_version}@#{project.gemset} --create&lt;/span&gt;

bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rails s

&lt;span class="c"&gt;##############################&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;rails_debug]

&lt;span class="nv"&gt;USER_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#{node.home}"&lt;/span&gt;
&lt;span class="nv"&gt;APP_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"#{project.home}"&lt;/span&gt;

&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$APP_HOME&lt;/span&gt;

&lt;span class="nb"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;$USER_HOME&lt;/span&gt;/.rvm/scripts/rvm

rvm use &lt;span class="c"&gt;#{project.ruby_version}@#{project.gemset} --create&lt;/span&gt;

&lt;span class="nv"&gt;RAILS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;which rails&lt;span class="sb"&gt;`&lt;/span&gt;

bundle &lt;span class="nb"&gt;exec &lt;/span&gt;rdebug-ide --port 1234 --dispatcher-port 26162 -- &lt;span class="nv"&gt;$RAILS&lt;/span&gt; s
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Executing automated scripts&lt;/h2&gt;

&lt;p&gt;First, take a look at the list of available thor command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;thor -T
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see something like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;osx_install
-----------
thor osx_install:all                      &lt;span class="c"&gt;# Installs all required packages&lt;/span&gt;
thor osx_install:app                      &lt;span class="c"&gt;# Installs app&lt;/span&gt;
thor osx_install:brew                     &lt;span class="c"&gt;# brew&lt;/span&gt;
thor osx_install:general                  &lt;span class="c"&gt;# Installs general packages&lt;/span&gt;
thor osx_install:git                      &lt;span class="c"&gt;# git&lt;/span&gt;
thor osx_install:jenkins                  &lt;span class="c"&gt;# jenkins&lt;/span&gt;
thor osx_install:jenkins_restart          &lt;span class="c"&gt;# jenkins_restart&lt;/span&gt;
thor osx_install:mysql                    &lt;span class="c"&gt;# mysql&lt;/span&gt;
thor osx_install:mysql_create_schema      &lt;span class="c"&gt;# mysql_create_schema&lt;/span&gt;
thor osx_install:mysql_create_schemas     &lt;span class="c"&gt;# Initializes mysql schemas&lt;/span&gt;
thor osx_install:mysql_create_user        &lt;span class="c"&gt;# mysql_create_user&lt;/span&gt;
thor osx_install:mysql_drop_schema        &lt;span class="c"&gt;# mysql_drop_schema&lt;/span&gt;
thor osx_install:mysql_drop_schemas       &lt;span class="c"&gt;# Drops mysql schemas&lt;/span&gt;
thor osx_install:mysql_drop_user          &lt;span class="c"&gt;# mysql_drop_user&lt;/span&gt;
thor osx_install:mysql_restart            &lt;span class="c"&gt;# mysql_restart&lt;/span&gt;
thor osx_install:npm                      &lt;span class="c"&gt;# npm&lt;/span&gt;
thor osx_install:package_installed        &lt;span class="c"&gt;# package_installed&lt;/span&gt;
thor osx_install:postgres                 &lt;span class="c"&gt;# postgres&lt;/span&gt;
thor osx_install:postgres_create_schema   &lt;span class="c"&gt;# postgres_create_schema&lt;/span&gt;
thor osx_install:postgres_create_schemas  &lt;span class="c"&gt;# Initializes postgres schemas&lt;/span&gt;
thor osx_install:postgres_create_user     &lt;span class="c"&gt;# postgres_create_user&lt;/span&gt;
thor osx_install:postgres_drop_schema     &lt;span class="c"&gt;# postgres_drop_schema&lt;/span&gt;
thor osx_install:postgres_drop_schemas    &lt;span class="c"&gt;# Drops postgres schemas&lt;/span&gt;
thor osx_install:postgres_drop_user       &lt;span class="c"&gt;# postgres_drop_user&lt;/span&gt;
thor osx_install:postgres_restart         &lt;span class="c"&gt;# postgres_restart&lt;/span&gt;
thor osx_install:postgres_start           &lt;span class="c"&gt;# postgres_start&lt;/span&gt;
thor osx_install:postgres_stop            &lt;span class="c"&gt;# postgres_stop&lt;/span&gt;
thor osx_install:prepare                  &lt;span class="c"&gt;# prepare&lt;/span&gt;
thor osx_install:qt                       &lt;span class="c"&gt;# qt&lt;/span&gt;
thor osx_install:ruby                     &lt;span class="c"&gt;# ruby&lt;/span&gt;
thor osx_install:rvm                      &lt;span class="c"&gt;# rvm&lt;/span&gt;
thor osx_install:selenium                 &lt;span class="c"&gt;# selenium&lt;/span&gt;
thor osx_install:selenium_restart         &lt;span class="c"&gt;# selenium_restart&lt;/span&gt;
thor osx_install:service_started          &lt;span class="c"&gt;# service_started&lt;/span&gt;
thor osx_install:svn                      &lt;span class="c"&gt;# svn&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this scripts you can execute them separately and all together:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;thor osx_install:brew
thor osx_install:rvm
thor osx_install:postgres
thor osx_install:brew

thor osx_install:all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To configure postgres only run this sequence:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;thor osx_install:postgres
thor osx_install:postgres_create_user
thor osx_install:postgres_create_schemas
thor osx_install:postgres_start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enjoy the gem and let me know if other useful command can be added to it.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Oracle Instant Client Provision</title>
    <link rel="alternate" href="/blog/2014/05/31/install_oracle_client.html"/>
    <id>/blog/2014/05/31/install_oracle_client.html</id>
    <published>2014-05-30T20:00:00-04:00</published>
    <updated>2014-05-30T20:00:00-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Oracle Instant Client Provision - thor-based tasks for facilitating Oracle Instant Client installation&lt;/h1&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;Installing database driver for Oracle (activerecord-oracle_enhanced-adapter) is not a simple process.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First, you need to install Oracle Instant Client.&lt;/li&gt;
&lt;li&gt;Second, you have to install ruby wrapper around Instant Client (ruby-oci8 gem). On some platforms it
requires compiling source code.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Only after that you can install oracle database driver.&lt;/p&gt;

&lt;p&gt;Here we discuss how to do it for OSX 10 operating system.&lt;/p&gt;

&lt;h2&gt;Create new gem group&lt;/h2&gt;

&lt;p&gt;Create separate group (e.g. &amp;ldquo;oracle&amp;rdquo;) in Gemfile for oracle ruby-oci8 client wrapper. You have to keep
this gem in separate group because it requires special steps to be done before database driver
can be installed.&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# Gemfile&lt;/span&gt;

&lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="ss"&gt;:oracle&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s2"&gt;"ruby-oci8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"2.1.7"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install gems for the project (except ruby-oci8 gem)&lt;/h2&gt;

&lt;p&gt;Install ruby gems for your project with bundler tool. You have to bypass oracle client wrapper installation:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;bundle install --without&lt;span class="o"&gt;=&lt;/span&gt;oracle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;without&lt;/strong&gt; parameter will exclude &lt;strong&gt;oracle&lt;/strong&gt; bundler group from the execution.&lt;/p&gt;

&lt;p&gt;Check that you don&amp;rsquo;t have ruby-oci8 installed yet:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;gem list
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Download Oracle Instant Client&lt;/h2&gt;

&lt;p&gt;Download Oracle Instant Client packages and save them locally (e.g. in &amp;ldquo;downloads&amp;rdquo; folder). You can find
installation packages on &lt;strong&gt;&lt;a href="http://www.oracle.com"&gt;www.oracle.com&lt;/a&gt;&lt;/strong&gt; web site (you have to be registered user though).&lt;/p&gt;

&lt;h2&gt;Configuration file&lt;/h2&gt;

&lt;p&gt;Create configuration file for the installation (.oracle_client_provision.json) in the root of your project.
It will define where you have downloaded files and some other parameters:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight json"&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="s2"&gt;"node"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"domain"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"127.0.0.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"user"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ENV['USER']"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ENV['HOME']"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"port"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"remote"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="s2"&gt;"project"&lt;/span&gt;&lt;span class="err"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{node.home}/my_project_with_oracle_driver"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"ruby_home"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ENV['MY_RUBY_HOME']"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="s2"&gt;"instant_client"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"src_dir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{project.home}/downloads"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"dest_dir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{oracle.oracle_base}/instantclient_11_2"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;

    &lt;/span&gt;&lt;span class="s2"&gt;"basic_zip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{instant_client.src_dir}/instantclient-basic-macos.x64-#{oracle.oracle_version}.zip"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"sdk_zip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{instant_client.src_dir}/instantclient-sdk-macos.x64-#{oracle.oracle_version}.zip"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"sqlplus_zip"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{instant_client.src_dir}/instantclient-sqlplus-macos.x64-#{oracle.oracle_version}.zip"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt;

  &lt;/span&gt;&lt;span class="s2"&gt;"oracle"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"oracle_base"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/usr/local/oracle"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"oracle_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"11.2.0.4.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="s2"&gt;"ruby_oci_version"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2.1.7"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="s2"&gt;"tns_admin_dir"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"#{oracle.oracle_base}/network/admin"&lt;/span&gt;&lt;span class="w"&gt;
  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;

&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are going to run ruby from &lt;strong&gt;project.ruby_home&lt;/strong&gt; on behalf of the &lt;strong&gt;node.user&lt;/strong&gt; and we will use specific versions
of &lt;strong&gt;oracle&lt;/strong&gt; client and &lt;strong&gt;ruby-oci8&lt;/strong&gt; gem. We also specify where to look for installation packages (instant&lt;em&gt;client.src\&lt;/em&gt;dir)
and where to install Instant Client (instant&lt;em&gt;client.dest\&lt;/em&gt;dir). Also, as you can see, we are using &lt;strong&gt;macos&lt;/strong&gt; as a platform
and &lt;strong&gt;x64&lt;/strong&gt; as an architecture.&lt;/p&gt;

&lt;h2&gt;Provide execution script&lt;/h2&gt;

&lt;p&gt;Library itself if written in ruby, but for launching its code you have to use &lt;strong&gt;rake&lt;/strong&gt; or &lt;strong&gt;thor&lt;/strong&gt;. Here I provide
thor script as an example:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'thor'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'oracle_client_provision'&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OracleClient&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Thor&lt;/span&gt;
  &lt;span class="vi"&gt;@installer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;OracleClientProvision&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;".oracle_client_provision.json"&lt;/span&gt;

  &lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="nb"&gt;self&lt;/span&gt;
    &lt;span class="kp"&gt;attr_reader&lt;/span&gt; &lt;span class="ss"&gt;:installer&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"install"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Installs Oracle Instant Client"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;install&lt;/span&gt;
    &lt;span class="no"&gt;OracleClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;installer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;install&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"uninstall"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Uninstalls Oracle Instant Client"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;uninstall&lt;/span&gt;
    &lt;span class="no"&gt;OracleClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;installer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;uninstall&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"verify"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"Verifies Oracle Instant Client connection"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;verify&lt;/span&gt;
    &lt;span class="n"&gt;username&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"scott"&lt;/span&gt;
    &lt;span class="n"&gt;password&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"tiger"&lt;/span&gt;
    &lt;span class="n"&gt;schema&lt;/span&gt;   &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"ORCL"&lt;/span&gt;
    &lt;span class="n"&gt;sql&lt;/span&gt;      &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"SELECT * FROM emp where rownum &amp;lt;= 10"&lt;/span&gt;

    &lt;span class="no"&gt;OracleClient&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;installer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;verify&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="s2"&gt;"require 'oci8'; OCI8.new('&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;username&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;','&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;','&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;schema&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;').exec('&lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;sql&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;') do |r| puts r.join(','); end"&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install Oracle Instant Client&lt;/h2&gt;

&lt;p&gt;Run this &lt;strong&gt;thor&lt;/strong&gt; command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;thor oracle_client:install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After execution all Instant Client packages (basic, sdk and sqlplus) will be installed at the right location
(instant&lt;em&gt;client.dest\&lt;/em&gt;dir) on your computer.&lt;/p&gt;

&lt;h2&gt;Again: install gems for the project, now with ruby-oci8 gem&lt;/h2&gt;

&lt;p&gt;Remove .bundle folder in order to include &amp;ldquo;oracle&amp;rdquo; group into bundle execution and
then run bundler with &amp;ldquo;oracle&amp;rdquo; group:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;rm -rf .bundle

bundle
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Verify the installation&lt;/h2&gt;

&lt;p&gt;If you have Oracle installed locally with &lt;strong&gt;scott/tiger/ORCL&lt;/strong&gt;, you can test it now:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;thor oracle_client:verify
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have oracle installed somewhere on the network, you can add TNS names inside your
&lt;strong&gt;tnsnames.ora&lt;/strong&gt; file located inside &lt;strong&gt;/usr/local/oracle/network/admin&lt;/strong&gt; folder. You can set up
this location via &lt;strong&gt;tns_admin_dir&lt;/strong&gt; property inside your configuration file.&lt;/p&gt;

&lt;p&gt;tnsnames.ora file will have this section:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight plaintext"&gt;MY_ORCL=
    (DESCRIPTION=
        (ADDRESS=
            (PROTOCOL=TCP)
            (HOST=db.your_host.com)
            (PORT=1521)
        )
        (CONNECT_DATA=
            (SID=MY_ORCL)
        )
    )
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;where you define &lt;strong&gt;MY_ORCL&lt;/strong&gt; schema on &lt;strong&gt;db.your_host.com&lt;/strong&gt; running on port &lt;strong&gt;1521&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;In order to use oracle driver inside rails application, you have to include it into your Gemfile:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# Gemfile&lt;/span&gt;

&lt;span class="n"&gt;group&lt;/span&gt; &lt;span class="ss"&gt;:oracle&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="n"&gt;gem&lt;/span&gt; &lt;span class="s1"&gt;'activerecord-oracle_enhanced-adapter'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'1.5.5'&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1&gt;Summary: all steps all together&lt;/h1&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;bundle install --without&lt;span class="o"&gt;=&lt;/span&gt;oracle

thor oracle_client:install

rm -rf .bundle

bundle

thor oracle_client:verify
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Text Interpolator gem</title>
    <link rel="alternate" href="/blog/2014/05/17/text_interpolator.html"/>
    <id>/blog/2014/05/17/text_interpolator.html</id>
    <published>2014-05-16T20:00:00-04:00</published>
    <updated>2014-05-16T20:00:00-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Text Interpolator gem&lt;/h1&gt;

&lt;p&gt;It is a simple library for interpolation of variables inside the text.&lt;/p&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;In ruby you have few options for variables interpolation:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;interpolation inside the string:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;var1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'some value 1'&lt;/span&gt;
&lt;span class="n"&gt;var2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'some value 2'&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"We have var1: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;var1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; and var2: &lt;/span&gt;&lt;span class="si"&gt;#{&lt;/span&gt;&lt;span class="n"&gt;var2&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;."&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="c1"&gt;# We have var1: some value 1 and var2: some value 2.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;interpolation inside file (with embedded ruby -  erb):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# some_template.erb&lt;/span&gt;

&lt;span class="no"&gt;We&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="ss"&gt;var1: &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="sx"&gt;%= var1 %&amp;gt; and var2:  &amp;lt;%=&lt;/span&gt; &lt;span class="n"&gt;var2&lt;/span&gt;&lt;span class="sx"&gt;%&amp;gt;.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# test.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'erb'&lt;/span&gt;

&lt;span class="n"&gt;var1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'some value 1'&lt;/span&gt;
&lt;span class="n"&gt;var2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;'some value 2'&lt;/span&gt;

&lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ERB&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"some_template.erb"&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;result&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="c1"&gt;# We have var1: some value 1 and var2: some value 2.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This library can be used for &lt;strong&gt;interpolation inside file with string syntax&lt;/strong&gt;. In order to
achieve it library uses one ruby trick:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="ss"&gt;var1: &lt;/span&gt;&lt;span class="s1"&gt;'some value 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;var2: &lt;/span&gt;&lt;span class="s1"&gt;'some value 2'&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"We have var1: %{var1} and var2: %{var2}."&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="c1"&gt;# We have var1: some value 1 and var2: some value 2.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s straightforward. Here is example of file interpolation:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# some_template.txt&lt;/span&gt;

&lt;span class="no"&gt;We&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="ss"&gt;var1: &lt;/span&gt;&lt;span class="c1"&gt;#{var1} and var2:  #{var2}.&lt;/span&gt;
&lt;span class="no"&gt;We&lt;/span&gt; &lt;span class="n"&gt;have&lt;/span&gt; &lt;span class="ss"&gt;var3: &lt;/span&gt;&lt;span class="c1"&gt;#{settings.var3} and var4:  #{settings.var4}.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="c1"&gt;# test.rb&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'text_interpolator'&lt;/span&gt;

&lt;span class="n"&gt;env&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="ss"&gt;var1: &lt;/span&gt;&lt;span class="s1"&gt;'some value 1'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;var2: &lt;/span&gt;&lt;span class="s1"&gt;'some value 2'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="ss"&gt;settings: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;var3: &lt;/span&gt;&lt;span class="s1"&gt;'some value 3'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;var4: &lt;/span&gt;&lt;span class="s1"&gt;'some value 4'&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;template&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;File&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;read&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"some_template.txt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;text_interpolator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;TextInterpolator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text_interpolator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;interpolate&lt;/span&gt; &lt;span class="n"&gt;template&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;env&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="c1"&gt;# We have var1: some value 1 and var2: some value 2.&lt;/span&gt;
            &lt;span class="c1"&gt;# We have var3: some value 3 and var4: some value 4.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also interpolate hash on multiple levels:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="nb"&gt;hash&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="ss"&gt;host: &lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

  &lt;span class="ss"&gt;credentials: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="s2"&gt;"some_user"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;password: &lt;/span&gt;&lt;span class="s2"&gt;"some_password"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

    &lt;span class="ss"&gt;settings: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="s2"&gt;"some_user2"&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="ss"&gt;postgres: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;hostname: &lt;/span&gt;&lt;span class="s1"&gt;'#{host}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="s1"&gt;'#{credentials.user}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="ss"&gt;password: &lt;/span&gt;&lt;span class="s1"&gt;'postgres'&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;

  &lt;span class="ss"&gt;mysql: &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="ss"&gt;user: &lt;/span&gt;&lt;span class="s1"&gt;'#{credentials.settings.user}'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'text_interpolator'&lt;/span&gt;

&lt;span class="n"&gt;text_interpolator&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;TextInterpolator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;text_interpolator&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;interpolate&lt;/span&gt; &lt;span class="nb"&gt;hash&lt;/span&gt;

&lt;span class="nb"&gt;p&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt;

&lt;span class="c1"&gt;# {:host=&amp;gt;"localhost", &lt;/span&gt;
&lt;span class="c1"&gt;#  :credentials=&amp;gt;{:user=&amp;gt;"some_user", :password=&amp;gt;"some_password", &lt;/span&gt;
&lt;span class="c1"&gt;#  :settings=&amp;gt;{:user=&amp;gt;"some_user2"}}, &lt;/span&gt;
&lt;span class="c1"&gt;#  :postgres=&amp;gt;{:hostname=&amp;gt;"localhost", :user=&amp;gt;"some_user", :password=&amp;gt;"postgres"}, &lt;/span&gt;
&lt;span class="c1"&gt;#  :mysql=&amp;gt;{:user=&amp;gt;"some_user2"}}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
  <entry>
    <title>Configure Macbook for Ruby/Rails Development</title>
    <link rel="alternate" href="/blog/2014/04/19/configure_macbook.html"/>
    <id>/blog/2014/04/19/configure_macbook.html</id>
    <published>2014-04-18T20:00:00-04:00</published>
    <updated>2014-04-18T20:00:00-04:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;Configure Macbook for Ruby/Rails Development&lt;/h1&gt;

&lt;h2&gt;Install UI applications:&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Iterm2&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;DropBox&lt;/li&gt;
&lt;li&gt;Skype&lt;/li&gt;
&lt;li&gt;RubyMine&lt;/li&gt;
&lt;li&gt;Moroshka File Manager&lt;/li&gt;
&lt;li&gt;MU Commander&lt;/li&gt;
&lt;li&gt;VLC&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Install XCode and XCode Tools&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Install XCode from AppStore.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install XCode Command Line Tools from inside XCode.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Read and agree to Xcode license from command line:&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;sudo xcodebuild -license
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install Homebrew&lt;/h2&gt;

&lt;p&gt;It is package manager for MacOS written in ruby:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;ruby -e &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;curl -fsSkL raw.github.com/mxcl/homebrew/go&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

brew update
brew tap homebrew/dupes
brew tap homebrew/versions

brew doctor
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install command line tools&lt;/h2&gt;

&lt;p&gt;Install base tools:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;brew install wget
brew install mc
brew install git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Qt&lt;/strong&gt; package is required by Capybara acceptance tests.&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;brew install qt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Node&lt;/strong&gt; is used for jasmine javascript unit test and for various javascript tasks.
It will install &lt;strong&gt;node package manager&lt;/strong&gt; (&lt;strong&gt;npm&lt;/strong&gt;) as well:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;brew install node
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Test it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;node -v
npm -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install Sublime 3 Text Editor&lt;/h2&gt;

&lt;p&gt;Download it from &lt;a href="http://www.sublimetext.com"&gt;http://www.sublimetext.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Create convenient link:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;ln -s /Applications/Sublime&lt;span class="se"&gt;\ &lt;/span&gt;Text.app/Contents/SharedSupport/bin/subl &lt;span class="nv"&gt;$HOME&lt;/span&gt;/bin/subl
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install RVM:&lt;/h2&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;&lt;span class="se"&gt;\c&lt;/span&gt;url -sSL https://get.rvm.io | bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then run this command:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;&lt;span class="nb"&gt;source&lt;/span&gt; ~/.rvm/scripts/rvm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or reopen in another terminal window.&lt;/p&gt;

&lt;p&gt;Install required packages:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;rvm requirements
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install various ruby versions:&lt;/h2&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;rvm install 1.9.3

rvm install 2.1.1

rvm install jruby
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Update .bash_profile&lt;/h2&gt;

&lt;p&gt;Add to &lt;strong&gt;~/.bash_profile&lt;/strong&gt; the following lines:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/sbin:/usr/local/bin:/usr/bin:/bin:/opt/local/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;EDITOR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'subl -w'&lt;/span&gt;
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PS1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;'${LOGNAME}@$(hostname): [$(~/.rvm/bin/rvm-prompt)] (\w):\n&amp;gt; '&lt;/span&gt;

&lt;span class="o"&gt;[[&lt;/span&gt; -r &lt;span class="nv"&gt;$rvm_path&lt;/span&gt;/scripts/completion &lt;span class="o"&gt;]]&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; . &lt;span class="nv"&gt;$rvm_path&lt;/span&gt;/scripts/completion

rvm use 1.9.3
ruby -v
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install postgres server:&lt;/h2&gt;

&lt;p&gt;Install it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;brew install postgres
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;mkdir -p ~/Library/LaunchAgents
sudo chown &lt;span class="nv"&gt;$USER&lt;/span&gt; ~/Library/LaunchAgents

cp /usr/local/Cellar/postgresql/9.3.3/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/

launchctl unload -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Initialize database:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;initdb /usr/local/var/postgres -E utf8
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create users and databases from command line:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;createuser -s -d -r rails_app_tmpl

createdb -U rails_app_tmpl rails_app_tmpl_dev
createdb -U rails_app_tmpl rails_app_tmpl_test
createdb -U rails_app_tmpl rails_app_tmpl_prod

rake db:migrate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or with psql tool:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;psql -c &lt;span class="s1"&gt;'create user rails_app_tmp;'&lt;/span&gt; -s -d -r

psql -c &lt;span class="s1"&gt;'create database rails_app_tmpl_dev;'&lt;/span&gt; -U rails_app_tmpl -h 127.0.0.1
psql -c &lt;span class="s1"&gt;'create database rails_app_tmpl_test;'&lt;/span&gt; -U rails_app_tmpl -h 127.0.0.1
psql -c &lt;span class="s1"&gt;'create database rails_app_tmpl_prod;'&lt;/span&gt; -U rails_app_tmpl -h 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Install mysql server:&lt;/h2&gt;

&lt;p&gt;Install it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;brew install mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start it:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;mkdir -p ~/Library/LaunchAgents
sudo chown &lt;span class="nv"&gt;$USER&lt;/span&gt; ~/Library/LaunchAgents

ln -sfv /usr/local/opt/mysql/&lt;span class="k"&gt;*&lt;/span&gt;.plist ~/Library/LaunchAgents

launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
launchctl load ~/Library/LaunchAgents/homebrew.mxcl.mysql.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Set up mysql root password:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;mysqladmin -u root password &lt;span class="s1"&gt;'root'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create users and databases from command line:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;--mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"flush  priveleges;"&lt;/span&gt;
--mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"drop user 'rails_app_tmpl'@'localhost';"&lt;/span&gt;

mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"CREATE USER 'rails_app_tmpl'@'localhost' IDENTIFIED BY 'rails_app_tmpl';"&lt;/span&gt;

mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"grant all privileges on *.* to 'rails_app_tmpl'@'localhost' identified by 'rails_app_tmpl' with grant option;"&lt;/span&gt;
mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"grant all privileges on *.* to 'rails_app_tmpl'@'%' identified by 'rails_app_tmpl' with grant option;"&lt;/span&gt;

mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"create database rails_app_tmpl_dev;"&lt;/span&gt;
mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"create database rails_app_tmpl_test;"&lt;/span&gt;
mysql -h localhost -u root -p&lt;span class="s2"&gt;"root"&lt;/span&gt; -e &lt;span class="s2"&gt;"create database rails_app_tmpl_prod;"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;or with mysql tool interactively:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;mysql -u root -p&lt;span class="s1"&gt;'root'&lt;/span&gt;

  CREATE USER &lt;span class="s1"&gt;'rails_app_tmpl'&lt;/span&gt;@&lt;span class="s1"&gt;'localhost'&lt;/span&gt; IDENTIFIED BY &lt;span class="s1"&gt;'rails_app_tmpl'&lt;/span&gt;;

  grant all privileges on &lt;span class="k"&gt;*&lt;/span&gt;.&lt;span class="k"&gt;*&lt;/span&gt; to &lt;span class="s1"&gt;'rails_app_tmpl'&lt;/span&gt;@&lt;span class="s1"&gt;'localhost'&lt;/span&gt; identified by &lt;span class="s1"&gt;'rails_app_tmpl'&lt;/span&gt; with grant option;
  grant all privileges on &lt;span class="k"&gt;*&lt;/span&gt;.&lt;span class="k"&gt;*&lt;/span&gt; to &lt;span class="s1"&gt;'rails_app_tmpl'&lt;/span&gt;@&lt;span class="s1"&gt;'%'&lt;/span&gt; identified by &lt;span class="s1"&gt;'rails_app_tmpl'&lt;/span&gt; with grant option;

  create database rails_app_tmpl_dev;
  create database rails_app_tmpl_test;
  create database rails_app_tmpl_prod;

  &lt;span class="nb"&gt;exit&lt;/span&gt;;
&lt;span class="sb"&gt;```&lt;/span&gt;bash

&lt;span class="c"&gt;## Install selenium standalone server&lt;/span&gt;

&lt;span class="sb"&gt;```&lt;/span&gt;bash
brew install selenium-server-standalone
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Standalone selenium server is implemented as launchd agent.&lt;/p&gt;

&lt;p&gt;To have launchd start selenium-server-standalone at login, create soft link:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;ln -sfv /usr/local/opt/selenium-server-standalone/&lt;span class="k"&gt;*&lt;/span&gt;.plist ~/Library/LaunchAgents
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then load selenium-server-standalone agent:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;launchctl load ~/Library/LaunchAgents/homebrew.mxcl.selenium-server-standalone.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It will run selenium server on port 4444.&lt;/p&gt;

&lt;p&gt;If you don&amp;rsquo;t want to use agent, use java directly:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;java -jar /usr/local/opt/selenium-server-standalone/selenium-server-standalone-2.35.0.jar -p 4444
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Create or load your project&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Create folder with ruby and/or rails.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create &lt;strong&gt;Gemfile&lt;/strong&gt; with all dependent ruby gems.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Create &lt;strong&gt;package.json&lt;/strong&gt; with all dependent javascript nodes.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;*Install ruby gems and js nodes:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;bundle install

npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Other instructions on Mac configuration are available here &lt;a href="link1"&gt;here&lt;/a&gt; and &lt;a href="link2"&gt;here&lt;/a&gt;.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>ScriptExecutor: Ruby library for executing shell scripts, locally or on remote server</title>
    <link rel="alternate" href="/blog/2013/12/21/script_executor.html"/>
    <id>/blog/2013/12/21/script_executor.html</id>
    <published>2013-12-20T19:00:00-05:00</published>
    <updated>2013-12-20T19:00:00-05:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1&gt;ScriptExecutor: Ruby library for executing shell scripts, locally or on remote server&lt;/h1&gt;

&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;There are few libraries for automating deployment tasks in &lt;strong&gt;remote&lt;/strong&gt; environment:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="capistrano"&gt;Capistrano&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="chef"&gt;Chef&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="mina"&gt;Mina&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="vlad"&gt;Vlad&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of them tend to be too complicated, especially for relatively simple tasks. For example:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;capistrano is tailored for same set of commands executed over group of servers. If you want
to create small script for executing code on unique server, you have to &amp;ldquo;respect&amp;rdquo;
capistrano restrictions, e.g. create &lt;strong&gt;Capfile&lt;/strong&gt;, &lt;strong&gt;config/deploy.rb&lt;/strong&gt; etc.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Chef is implemented as huge framework with servers and clients and only &amp;ldquo;chef-solo&amp;rdquo; is
relevant to our conversation.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Most of these libraries are rake-centric, so it&amp;rsquo;s difficult to reuse developed code in other
applications.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In most cases, deployment task can be done over &lt;strong&gt;ssh protocol&lt;/strong&gt;. You can use &lt;a href="net-ssh"&gt;net-ssh&lt;/a&gt; gem
as implementation - it&amp;rsquo;s pure Ruby implementation of a SSH (protocol 2) client.&lt;/p&gt;

&lt;p&gt;When you execute shell script &lt;strong&gt;locally&lt;/strong&gt;, you have plenty of ways to do it with ruby:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;%x&lt;/strong&gt; expression:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="sx"&gt;%x{ pwd }&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;backticks:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="sb"&gt;`pwd`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;system&lt;/strong&gt; command:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt; &lt;span class="nb"&gt;system&lt;/span&gt; &lt;span class="s2"&gt;"pwd"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;exec&lt;/strong&gt; command:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="nb"&gt;exec&lt;/span&gt; &lt;span class="s2"&gt;"pwd"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;spawn&lt;/strong&gt; command:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;spawn&lt;/span&gt; &lt;span class="s2"&gt;"pwd"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;popen&lt;/strong&gt; command:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="no"&gt;IO&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;popen&lt;/span&gt; &lt;span class="s2"&gt;"pwd"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;using &lt;strong&gt;open3&lt;/strong&gt; library:&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s2"&gt;"open3"&lt;/span&gt;

&lt;span class="no"&gt;Open3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;popen3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'pwd'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt;&lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;.&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;stderr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;status&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;Open3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;capture3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'pwd'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:stdin_data&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;stdin&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# another example&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With &lt;a href="script_executor"&gt;script_executor&lt;/a&gt; gem we are trying to build common interface for executing
both local and remote code in unified way.&lt;/p&gt;

&lt;h2&gt;Installation&lt;/h2&gt;

&lt;p&gt;Add this line to your application&amp;rsquo;s Gemfile:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;gem &lt;span class="s1"&gt;'script_executor'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then execute:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;bundle
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or install it yourself:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;gem install script_executor
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Usage&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Create executor&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;executor&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="no"&gt;ScriptExecutor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;new&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Execute local command:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt; &lt;span class="s2"&gt;"ls"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Execute remote command:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;server_info&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="ss"&gt;:remote&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:domain&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"some_host"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:user&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"some_user"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:password&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"some_password"&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;server_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:script&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"ls -al"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Execute remote command as &amp;lsquo;sudo&amp;rsquo;:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;server_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="ss"&gt;:sudo&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
  &lt;span class="ss"&gt;:script&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"/etc/init.d/tomcat stop"&lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Execute remote command with code block:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;server_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:sudo&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
  &lt;span class="sx"&gt;%Q(
    /etc/init.d/tomcat stop
    /etc/init.d/tomcat start
  )&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Execute remote command while capturing and suppressing output (default is &amp;lsquo;false&amp;rsquo; for both parameters):&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;server_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:capture_output&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                  &lt;span class="ss"&gt;:suppress_output&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;server_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
  &lt;span class="ss"&gt;:script&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"whoami"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="c1"&gt;# ENV['USER'] on remote server&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Simulate remote execution:&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="n"&gt;server_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:simulate&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;executor&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;execute&lt;/span&gt; &lt;span class="n"&gt;server_info&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nf"&gt;merge&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:script&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;"whoami"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# generate commands without actual execution&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Using ScriptLocator&lt;/h2&gt;

&lt;p&gt;You can keep scripts that need to be executed, embedded into your code (as in examples above),
move them into separate file or keep them in same file behind &lt;strong&gt;__END__&lt;/strong&gt; Ruby directive.
The latter gives you the ability to keep commands and code together thus simplifying
access to the code, making maintenance easier.&lt;/p&gt;

&lt;p&gt;For example, if you want to create script with 2 commands (command1, command2), you can use
&lt;strong&gt;scripts&lt;/strong&gt; and &lt;strong&gt;evaluate_script_body&lt;/strong&gt; methods:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'script_locator'&lt;/span&gt;

&lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;ScriptLocator&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;# [command1, command2]&lt;/span&gt;

&lt;span class="nb"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;"john"&lt;/span&gt;

&lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;evaluate_script_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'command1'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;puts&lt;/span&gt; &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="c1"&gt;# john&lt;/span&gt;
&lt;span class="cp"&gt;__END__

[command1]

echo "&amp;lt;%= name %&amp;gt;"

[command2]

echo "test2"
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s build more sophisticated example. We want to automate generating public/private
keys for ssh access and copying public key to remote server for password-less access
to the server.&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight ruby"&gt;&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'script_executor/executable'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'script_executor/script_locator'&lt;/span&gt;
&lt;span class="nb"&gt;require&lt;/span&gt; &lt;span class="s1"&gt;'file_utils/file_utils'&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Ssh&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="no"&gt;Thor&lt;/span&gt;
  &lt;span class="kp"&gt;include&lt;/span&gt; &lt;span class="no"&gt;Executable&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;ScriptLocator&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="no"&gt;FileUtils&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"gen_key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"gen_key"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;gen_key&lt;/span&gt;
    &lt;span class="n"&gt;scripts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;evaluate_script_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'gen_key'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;

  &lt;span class="n"&gt;desc&lt;/span&gt; &lt;span class="s2"&gt;"cp_key"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;"cp_key"&lt;/span&gt;
  &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;cp_key&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;scripts&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kp"&gt;__FILE__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;execute&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;evaluate_script_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'scp_public_key'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="n"&gt;execute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ss"&gt;:remote&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:domain&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ss"&gt;:user&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="no"&gt;ENV&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'USER'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt;
      &lt;span class="n"&gt;evaluate_script_body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;scripts&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'install_key'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;binding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;end&lt;/span&gt;
  &lt;span class="k"&gt;end&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;

&lt;span class="cp"&gt;__END__

[gen_key]

echo "Generating ssh key..."

cd ~/.ssh
ssh-keygen

[scp_public_key]

echo "Copying public key to remote server..."

scp ~/.ssh/id_rsa.pub &amp;lt;%= ENV['USER'] %&amp;gt;@&amp;lt;%= host %&amp;gt;:~/pubkey.txt

[install_key]

mkdir -p ~/.ssh
chmod 700 .ssh
cat pubkey.txt &amp;gt;&amp;gt; ~/.ssh/authorized_keys
rm ~/pubkey.txt
chmod 600 ~/.ssh/*
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This example has 3 scripts: &lt;strong&gt;gen_key&lt;/strong&gt;, &lt;strong&gt;scp_public_key&lt;/strong&gt; and &lt;strong&gt;install_key&lt;/strong&gt;. They are self-explanatory.
Also, pay attention at using &lt;strong&gt;Executable&lt;/strong&gt; module. It is used when we want to add ScriptExecutor functionality
as part of class.&lt;/p&gt;

&lt;p&gt;In order to execute new commands you have to use &lt;strong&gt;thor&lt;/strong&gt; tool:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;thor ssh:gen_key
thor ssh:cp_key your.remote.server.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can achieve same goal with homebrew tool:&lt;/p&gt;
&lt;pre&gt;&lt;code class="highlight shell"&gt;brew install ssh-copy-id

ssh-copy-id &lt;span class="nv"&gt;$USER&lt;/span&gt;@your.remote.server.com
&lt;/code&gt;&lt;/pre&gt;
</content>
  </entry>
</feed>

%li
%a{:href => "https://github.com/russolsen/design_patterns_in_ruby_code?utm_source=rubyweekly&utm_medium=email"}="russolsen/design_patterns_in_ruby_code · GitHub"
%li
%a{:href => "https://discuss.gemnasium.com/t/casting-adding-behavior-to-objects-without-using-extend/34"}="Casting: adding behavior to objects without using extend - Gemnasium Discussions"
%li
%a{:href => "http://engineering.appfolio.com/2013/06/17/ruby-mixins-activesupportconcern/"}="Ruby Mixins & ActiveSupport::Concern | Appfolio Engineering"
%li
%a{:href => "http://victorsavkin.com/post/42542190528/hexagonal-architecture-for-rails-developers?8346ef00"}="Hexagonal Architecture for Rails Developers | Victor Savkin's Blog About Software Design"
%li
%a{:href => "http://tonyarcieri.com/dci-in-ruby-is-completely-broken"}="“DCI” in Ruby is completely broken | Tony Arcieri"
%li
%a{:href => "http://rebo.ruhoh.com/why-dci-contexts/"}="Why DCI Contexts?"
%li
%a{:href => "https://github.com/rebo/alias_dci"}="rebo/alias_dci · GitHub"
%li
%a{:href => "http://www.mikepackdev.com/blog_posts/37-dci-the-king-of-the-open-closed-principle"}="DCI: The King of the Open/Closed Principle :: Mike Pack Development"
%li
%a{:href => "http://rubysource.com/dci-the-evolution-of-the-object-oriented-paradigm/"}="RubySource | Data Context Interaction: The Evolution of the Object Oriented ParadigmRubySource"
%li
%a{:href => "http://mikepackdev.com/blog_posts/35-dci-with-ruby-refinements"}="DCI with Ruby Refinements :: Mike Pack Development"
%li
%a{:href => "http://andrzejonsoftware.blogspot.com/2011/12/rails-is-still-cool.html"}="Andrzej on Software: Rails is still cool"
%li
%a{:href => "http://mikepackdev.com/blog_posts/26-dci-role-injection-in-ruby"}="DCI Role Injection in Ruby :: Mike Pack Development"
%li
%a{:href => "https://github.com/cjbottaro/schizo"}="cjbottaro/schizo - GitHub"
%li
%a{:href => "http://www.saturnflyer.com/blog/jim/2012/02/08/triggering-the-dci-context/"}="Triggering the DCI Context - Saturn Flyer with Jim Gay"
%li
%a{:href => "http://mikepackdev.com/blog_posts/24-the-right-way-to-code-dci-in-ruby"}="The Right Way To Code DCI in Ruby :: Mike Pack Development"
%li
%a{:href => "http://mikepackdev.com/blog_posts/22-benchmarking-dci-in-ruby"}="Benchmarking DCI in Ruby :: Mike Pack Development"
%li
%a{:href => "http://victorsavkin.com/post/13966712168/dci-in-ruby"}="Victor Savkin's Blog • DCI in Ruby"
%li
%a{:href => "http://nicksda.apotomo.de/2011/12/ruby-on-rest-2-representers-and-the-dci-pattern/"}="Ruby On REST 2: Representers and the DCI Pattern ¶ Nicksda"
%li
%a{:href => "http://jakedouglas.wordpress.com/2011/10/16/every-day-use-of-the-decorator-pattern/"}="Every day use of the decorator pattern « Jake Douglas"
%li
%a{:href => "http://www.saturnflyer.com/blog/jim/2011/10/04/oop-dci-and-ruby-what-your-system-is-vs-what-your-system-does/"}="OOP, DCI and Ruby - what your system is vs. what your system does - Saturn Flyer"
%li
%a{:href => "http://www.saturnflyer.com/blog/jim/2011/09/28/4-simple-steps-extending-ruby-objects-the-tip-of-the-iceberg-with-dci/"}="4 Simple Steps - Extending Ruby Objects - The Tip of the Iceberg with DCI - Saturn Flyer"
%li
%a{:href => "http://blog.rubybestpractices.com/posts/gregory/055-issue-23-solid-design.html?utm_source=rubyweekly&utm_medium=email"}="Practicing Ruby - Issue #23: SOLID Design Principles"
%li
%a{:href => "http://nicksda.apotomo.de/2011/07/are-class-methods-evil/"}="Are Class Methods Evil? ¶ Nicksda"
%li
%a{:href => "http://semweb.tumblr.com/post/5620592113/data-context-integration-hands-on"}="Michael Sokol"
%li
%a{:href => "http://semweb.tumblr.com/post/4752956926/why-you-should-stop-doing-class-oriented-programming"}="Michael Sokol"
%li
%a{:href => "http://pedromtavares.wordpress.com/2010/07/08/dpr-introduction/"}="[DPR] – Introduction « Pedro Mateus Tavares"
%li
%a{:href => "http://andrzejonsoftware.blogspot.com/2011/02/dci-and-rails.html"}="Andrzej on Software: DCI and Rails"
%li
%a{:href => "http://en.wikipedia.org/wiki/Data,_Context,_and_Interaction"}="Data, Context and Interaction - Wikipedia, the free encyclopedia"
%li
%a{:href => "http://localhost:3000/payment#shippingInfoHeader"}="Payment & Shipping"
%li
%a{:href => "http://buhrmi.tumblr.com/post/8035284845/embracing-meta-programming-an-rpg-character-stat"}="Embracing meta programming: An RPG character stat system - buhrmi's Blog"
%li
%a{:href => "https://chrome.google.com/webstore/search?hl=en-US&category=ext&q=netflix"}="netflix - Chrome Web Store"
%li
%a{:href => "http://robots.thoughtbot.com/post/20964851591/decorators-vs-other-patterns"}="Decorators vs. other patterns"
%li
%a{:href => "http://solnic.eu/2012/04/11/get-rid-of-that-code-smell-control-couple.html"}="Get Rid of That Code Smell – Control Couple | solnic.eu"
%li
%a{:href => "http://solnic.eu/2012/04/04/get-rid-of-that-code-smell-attributes.html"}="Get Rid of That Code Smell – Attributes | solnic.eu"
%li
%a{:href => "http://rubysource.com/solid-ruby-single-responsibility-principle/"}="RubySource | SOLID Ruby: Single Responsibility PrincipleRubySource"
%li
%a{:href => "http://the.codepoet.ch/what-you-should-know-about-solid/"}="What you should know about SOLID"
%li
%a{:href => "http://blog.steveklabnik.com/2011/09/06/the-secret-to-rails-oo-design.html?utm_source=rubyweekly&utm_medium=email"}="The Secret to Rails OO Design - Literate Programming"
%li
%a{:href => "http://blog.codeclimate.com/blog/2012/10/17/7-ways-to-decompose-fat-activerecord-models/"}="7 Ways to Decompose Fat ActiveRecord Models - Code Climate Blog"
%li
%a{:href => "http://victorsavkin.com/post/42542190528/hexagonal-architecture-for-rails-developers?8346ef00"}="Hexagonal Architecture for Rails Developers | Victor Savkin's Blog About Software Design"

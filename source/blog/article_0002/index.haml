:markdown
  ## How to use CoffeeScript with nanoc

  **Step 1**: Add **coffee-script** to **Gemflie**:

:coderay_raw
  #!ruby

  gem 'coffee-script'

:markdown
  **Step 2**: Add **coffee_filter.rb** file to **lib** folder:

:coderay
  #!ruby

  require 'coffee-script'

  class CoffeeFilter < Nanoc3::Filter
    identifier :coffee

    def run(content, params = {})
      CoffeeScript.compile(content)
    end
  end

:markdown
  **Step 3**: Add new rules to **Rules** file for compiling **coffee-script** files into **javascript** files:

:coderay
  #!ruby

  compile '/assets/coffee/*/' do
    filter :coffee
  end

  # so that the /assets/coffee/ item is copied to /javascripts/ item
  route '/assets/coffee/*/' do
    item.identifier.sub(%r{^/assets/coffee}, '/javascripts').chop + '.js'
  end

:markdown
  **Step 4**: Create your first coffescript file in **source/assets/coffee** directory:

:coderay
  #!coffee

  # test.coffee
  notify -> alert "Hello, user!"

  notify()

:markdown
  **Step 5**: Compile your web site.

:coderay
  #!ruby

  nanoc3 compile

:markdown
  Compiled javascript files should be located in **javascrips** folder.

  If you want to use coffee-script inside your haml partials, include this gem into 'Gemfile':

:coderay
  #!ruby

  gem 'coffee-filter'

:markdown
  And include this fragment into partial:

:coderay
  #!coffee

  :coffeescript
    window.notify = () -> alert 'Hello, user!'

:coffeescript
  window.notify = () -> alert "Hello, user!"

%br
%div
  = "Click "
  %a{:onclick => "javascript:window.notify()"}="here"

  = "to execute compiled javascript file from coffescript file on this page."
